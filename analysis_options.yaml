# This file configures the analyzer, which statically analyzes Dart code to
# check for errors, warnings, and lints.
#
# The issues identified by the analyzer are surfaced in the UI of Dart-enabled
# IDEs (https://dart.dev/tools#ides-and-editors). The analyzer can also be
# invoked from the command line by running `flutter analyze`.

# The following line activates a set of recommended lints for Flutter apps,
# packages, and plugins designed to encourage good coding practices.
include: package:flutter_lints/flutter.yaml

linter:
  # The lint rules applied to this project can be customized in the
  # section below to disable rules from the `package:flutter_lints/flutter.yaml`
  # included above or to enable additional rules. A list of all available lints
  # and their documentation is published at
  # https://dart-lang.github.io/linter/lints/index.html.
  #
  # Instead of disabling a lint rule for the entire project in the
  # section below, it can also be suppressed for a single line of code
  # or a specific dart file by using the `// ignore: name_of_lint` and
  # `// ignore_for_file: name_of_lint` syntax on the line or in the file
  # producing the lint.
  rules:
    avoid_print: true  # Uncomment to disable the `avoid_print` rule
    prefer_single_quotes: true
    avoid_empty_else: true
    avoid_returning_null_for_future: true
    empty_statements: true
    hash_and_equals: true
    no_duplicate_case_values: true
    no_logic_in_create_state: true
    unnecessary_statements: true
    avoid_unnecessary_containers: true
    avoid_field_initializers_in_const_classes: true
    # Removes redundant `= null;`
    avoid_init_to_null: true
    avoid_unused_constructor_parameters: true
    # Prevents leaks and code executing after their lifecycle.
    cancel_subscriptions: true
    constant_identifier_names: true
    unnecessary_string_interpolations: true
    unnecessary_null_in_if_null_operators: true
    unnecessary_null_checks: true
    unnecessary_null_aware_assignments: true
    unnecessary_new: true
    unnecessary_brace_in_string_interps: true
    avoid_classes_with_only_static_members: false
    sort_pub_dependencies: false
    close_sinks: true
    #Prefer using ??= over testing for null.
    prefer_conditional_assignment: true
    #Use isEmpty for Iterables and Maps.
    prefer_is_empty: true
    #Use isNotEmpty for Iterables and Maps.
    prefer_is_not_empty: true
    #Only use double quotes for strings containing single quotes.

# Additional information about this file can be found at
# https://dart.dev/guides/language/analysis-options
